/* tslint:disable */
/* eslint-disable */
/**
 * This file was automatically generated by Payload.
 * DO NOT MODIFY IT BY HAND. Instead, modify your source Payload config,
 * and re-run `payload generate:types` to regenerate this file.
 */

/**
 * Supported timezones in IANA format.
 *
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "supportedTimezones".
 */
export type SupportedTimezones =
  | 'Pacific/Midway'
  | 'Pacific/Niue'
  | 'Pacific/Honolulu'
  | 'Pacific/Rarotonga'
  | 'America/Anchorage'
  | 'Pacific/Gambier'
  | 'America/Los_Angeles'
  | 'America/Tijuana'
  | 'America/Denver'
  | 'America/Phoenix'
  | 'America/Chicago'
  | 'America/Guatemala'
  | 'America/New_York'
  | 'America/Bogota'
  | 'America/Caracas'
  | 'America/Santiago'
  | 'America/Buenos_Aires'
  | 'America/Sao_Paulo'
  | 'Atlantic/South_Georgia'
  | 'Atlantic/Azores'
  | 'Atlantic/Cape_Verde'
  | 'Europe/London'
  | 'Europe/Berlin'
  | 'Africa/Lagos'
  | 'Europe/Athens'
  | 'Africa/Cairo'
  | 'Europe/Moscow'
  | 'Asia/Riyadh'
  | 'Asia/Dubai'
  | 'Asia/Baku'
  | 'Asia/Karachi'
  | 'Asia/Tashkent'
  | 'Asia/Calcutta'
  | 'Asia/Dhaka'
  | 'Asia/Almaty'
  | 'Asia/Jakarta'
  | 'Asia/Bangkok'
  | 'Asia/Shanghai'
  | 'Asia/Singapore'
  | 'Asia/Tokyo'
  | 'Asia/Seoul'
  | 'Australia/Brisbane'
  | 'Australia/Sydney'
  | 'Pacific/Guam'
  | 'Pacific/Noumea'
  | 'Pacific/Auckland'
  | 'Pacific/Fiji';

export interface Config {
  auth: {
    users: UserAuthOperations;
  };
  blocks: {};
  collections: {
    users: User;
    media: Media;
    pages: Page;
    products: Product;
    product_categories: ProductCategory;
    'payload-jobs': PayloadJob;
    'payload-locked-documents': PayloadLockedDocument;
    'payload-preferences': PayloadPreference;
    'payload-migrations': PayloadMigration;
  };
  collectionsJoins: {};
  collectionsSelect: {
    users: UsersSelect<false> | UsersSelect<true>;
    media: MediaSelect<false> | MediaSelect<true>;
    pages: PagesSelect<false> | PagesSelect<true>;
    products: ProductsSelect<false> | ProductsSelect<true>;
    product_categories: ProductCategoriesSelect<false> | ProductCategoriesSelect<true>;
    'payload-jobs': PayloadJobsSelect<false> | PayloadJobsSelect<true>;
    'payload-locked-documents': PayloadLockedDocumentsSelect<false> | PayloadLockedDocumentsSelect<true>;
    'payload-preferences': PayloadPreferencesSelect<false> | PayloadPreferencesSelect<true>;
    'payload-migrations': PayloadMigrationsSelect<false> | PayloadMigrationsSelect<true>;
  };
  db: {
    defaultIDType: number;
  };
  globals: {
    header: Header;
    footer: Footer;
    theme: Theme;
  };
  globalsSelect: {
    header: HeaderSelect<false> | HeaderSelect<true>;
    footer: FooterSelect<false> | FooterSelect<true>;
    theme: ThemeSelect<false> | ThemeSelect<true>;
  };
  locale: null;
  user: User & {
    collection: 'users';
  };
  jobs: {
    tasks: {
      schedulePublish: TaskSchedulePublish;
      inline: {
        input: unknown;
        output: unknown;
      };
    };
    workflows: unknown;
  };
}
export interface UserAuthOperations {
  forgotPassword: {
    email: string;
    password: string;
  };
  login: {
    email: string;
    password: string;
  };
  registerFirstUser: {
    email: string;
    password: string;
  };
  unlock: {
    email: string;
    password: string;
  };
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users".
 */
export interface User {
  id: number;
  updatedAt: string;
  createdAt: string;
  email: string;
  resetPasswordToken?: string | null;
  resetPasswordExpiration?: string | null;
  salt?: string | null;
  hash?: string | null;
  loginAttempts?: number | null;
  lockUntil?: string | null;
  password?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media".
 */
export interface Media {
  id: number;
  alt: string;
  updatedAt: string;
  createdAt: string;
  url?: string | null;
  thumbnailURL?: string | null;
  filename?: string | null;
  mimeType?: string | null;
  filesize?: number | null;
  width?: number | null;
  height?: number | null;
  focalX?: number | null;
  focalY?: number | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages".
 */
export interface Page {
  id: number;
  title: string;
  layout: (HomeLayout1 | HomeLayout2)[];
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  publishedAt?: string | null;
  slug?: string | null;
  slugLock?: boolean | null;
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HomeLayout1".
 */
export interface HomeLayout1 {
  children?:
    | (
        | BannerLayout1
        | BannerLayout2
        | BannerLayout3
        | FeatureLayout1
        | FeatureLayout2
        | OfferLayout1
        | FourcolumnLayout
        | ThreecolumnLayout
        | PromoProductLayout
        | PromoProduct2
        | ProductShowcase
        | ShowcaseLayout1
        | ShowcaseSection2
        | ShowcaseLayout3
        | AdvertismentSection1
        | AdvertismentSection2
        | BrandLayout1
        | BrandLayout2
        | CategoryLayout1
        | FaqLayout
        | ContentBlock
        | CallToActionBlock
        | BannerBlock
        | MediaBlock
      )[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'homeLayout1';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerLayout1".
 */
export interface BannerLayout1 {
  BannerImage1?: (number | null) | Media;
  BannerImage2?: (number | null) | Media;
  title: string;
  description: string;
  button: {
    type?: ('custom' | 'reference') | null;
    newTab?: boolean | null;
    reference?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    url?: string | null;
    label: string;
  };
  link: {
    type?: ('custom' | 'reference') | null;
    newTab?: boolean | null;
    reference?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    url?: string | null;
    label: string;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'bannerLayout1';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerLayout2".
 */
export interface BannerLayout2 {
  carousel: {
    image?: (number | null) | Media;
    label: string;
    desc?: string | null;
    button: {
      type?: ('custom' | 'reference') | null;
      newTab?: boolean | null;
      reference?: {
        relationTo: 'pages';
        value: number | Page;
      } | null;
      url?: string | null;
      label: string;
    };
    id?: string | null;
  }[];
  banner: {
    image: number | Media;
    label: string;
    description: string;
    button: {
      type?: ('custom' | 'reference') | null;
      newTab?: boolean | null;
      reference?: {
        relationTo: 'pages';
        value: number | Page;
      } | null;
      url?: string | null;
      label: string;
    };
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner2';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerLayout3".
 */
export interface BannerLayout3 {
  image?: {
    variant?: ('upload' | 'url') | null;
    defaultImgUrl?: string | null;
    defaultImg?: (number | null) | Media;
  };
  text: string;
  subtext?: string | null;
  button: {
    label: string;
    link: string;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'bannerLayout3';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeatureLayout1".
 */
export interface FeatureLayout1 {
  features: {
    featureIcon?: (number | null) | Media;
    title: string;
    description: string;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'featureLayout1';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeatureLayout2".
 */
export interface FeatureLayout2 {
  features: {
    featureIcon?: (number | null) | Media;
    title: string;
    description: string;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'featureLayout2';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "OfferLayout1".
 */
export interface OfferLayout1 {
  offers: {
    image?: (number | null) | Media;
    title: string;
    description: string;
    button: {
      type?: ('custom' | 'reference') | null;
      newTab?: boolean | null;
      reference?: {
        relationTo: 'pages';
        value: number | Page;
      } | null;
      url?: string | null;
      label: string;
    };
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'offerLayout1';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FourcolumnLayout".
 */
export interface FourcolumnLayout {
  title: string;
  products?: (number | Product)[] | null;
  button: {
    type?: ('custom' | 'reference') | null;
    newTab?: boolean | null;
    reference?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    url?: string | null;
    label: string;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'fourcolumnLayout';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products".
 */
export interface Product {
  id: number;
  product_title: string;
  product_id: string;
  product_handle: string;
  status: 'draft' | 'proposed' | 'published' | 'rejected';
  publishedAt?: string | null;
  content?: {
    layout?: (HomeLayout1 | HomeLayout2)[] | null;
  };
  details?: {
    additional_title?: string | null;
    additional_content?: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    } | null;
    additional_metadata?:
      | {
          [k: string]: unknown;
        }
      | unknown[]
      | string
      | number
      | boolean
      | null;
  };
  meta?: {
    title?: string | null;
    /**
     * Maximum upload file size: 12MB. Recommended file size for images is <500KB.
     */
    image?: (number | null) | Media;
    description?: string | null;
  };
  updatedAt: string;
  createdAt: string;
  _status?: ('draft' | 'published') | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HomeLayout2".
 */
export interface HomeLayout2 {
  children?:
    | (
        | BannerLayout1
        | BannerLayout2
        | BannerLayout3
        | FeatureLayout1
        | FeatureLayout2
        | OfferLayout1
        | FourcolumnLayout
        | ThreecolumnLayout
        | PromoProductLayout
        | PromoProduct2
        | ProductShowcase
        | ShowcaseLayout1
        | ShowcaseSection2
        | ShowcaseLayout3
        | AdvertismentSection1
        | AdvertismentSection2
        | BrandLayout1
        | BrandLayout2
        | CategoryLayout1
        | FaqLayout
        | ContentBlock
        | CallToActionBlock
        | BannerBlock
        | MediaBlock
      )[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'homeLayout2';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ThreecolumnLayout".
 */
export interface ThreecolumnLayout {
  title: string;
  products?: (number | Product)[] | null;
  button: {
    type?: ('custom' | 'reference') | null;
    newTab?: boolean | null;
    reference?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    url?: string | null;
    label: string;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'threecolumnLayout';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PromoProductLayout".
 */
export interface PromoProductLayout {
  heading: {
    name: string;
    description: string;
    button: {
      type?: ('custom' | 'reference') | null;
      newTab?: boolean | null;
      reference?: {
        relationTo: 'pages';
        value: number | Page;
      } | null;
      url?: string | null;
      label: string;
    };
  };
  products: (number | Product)[];
  promotion: {
    promotionImage?: (number | null) | Media;
    promoTagline: string;
    promoHeading: string;
    button: {
      type?: ('custom' | 'reference') | null;
      newTab?: boolean | null;
      reference?: {
        relationTo: 'pages';
        value: number | Page;
      } | null;
      url?: string | null;
      label: string;
    };
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'promoProduct';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PromoProduct2".
 */
export interface PromoProduct2 {
  heading: {
    name: string;
    description: string;
    button: {
      type?: ('custom' | 'reference') | null;
      newTab?: boolean | null;
      reference?: {
        relationTo: 'pages';
        value: number | Page;
      } | null;
      url?: string | null;
      label: string;
    };
  };
  products: (number | Product)[];
  promotion: {
    promotionImage?: (number | null) | Media;
    promoTagline: string;
    promoHeading: string;
    button: {
      type?: ('custom' | 'reference') | null;
      newTab?: boolean | null;
      reference?: {
        relationTo: 'pages';
        value: number | Page;
      } | null;
      url?: string | null;
      label: string;
    };
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'promoProduct2';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductShowcase".
 */
export interface ProductShowcase {
  heading: {
    name: string;
    button: {
      type?: ('custom' | 'reference') | null;
      newTab?: boolean | null;
      reference?: {
        relationTo: 'pages';
        value: number | Page;
      } | null;
      url?: string | null;
      label: string;
    };
  };
  products: (number | Product)[];
  promotion: {
    promotionImage?: (number | null) | Media;
    promoTagline: string;
    promoHeading: string;
    button: {
      type?: ('custom' | 'reference') | null;
      newTab?: boolean | null;
      reference?: {
        relationTo: 'pages';
        value: number | Page;
      } | null;
      url?: string | null;
      label: string;
    };
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'productShowcase';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ShowcaseLayout1".
 */
export interface ShowcaseLayout1 {
  image?: (number | null) | Media;
  showcaseTagline: string;
  showcaseHeading: string;
  showcaseDescription: string;
  button: {
    type?: ('custom' | 'reference') | null;
    newTab?: boolean | null;
    reference?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    url?: string | null;
    label: string;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'showcaseLayout1';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ShowcaseSection2".
 */
export interface ShowcaseSection2 {
  image?: (number | null) | Media;
  showcaseTagline: string;
  showcaseHeading: string;
  showcaseDescription: string;
  button: {
    type?: ('custom' | 'reference') | null;
    newTab?: boolean | null;
    reference?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    url?: string | null;
    label: string;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'showcaseLayout2';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ShowcaseLayout3".
 */
export interface ShowcaseLayout3 {
  image?: (number | null) | Media;
  showcaseTagline: string;
  showcaseHeading: string;
  showcaseDescription: string;
  button: {
    type?: ('custom' | 'reference') | null;
    newTab?: boolean | null;
    reference?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    url?: string | null;
    label: string;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'showcaseLayout3';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AdvertismentSection1".
 */
export interface AdvertismentSection1 {
  image?: (number | null) | Media;
  adTagline: string;
  adHeading: string;
  adDescription: string;
  button: {
    type?: ('custom' | 'reference') | null;
    newTab?: boolean | null;
    reference?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    url?: string | null;
    label: string;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'advertismentSection1';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AdvertismentSection2".
 */
export interface AdvertismentSection2 {
  image?: (number | null) | Media;
  adTagline: string;
  adHeading: string;
  adDescription: string;
  button: {
    type?: ('custom' | 'reference') | null;
    newTab?: boolean | null;
    reference?: {
      relationTo: 'pages';
      value: number | Page;
    } | null;
    url?: string | null;
    label: string;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'advertismentSection2';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BrandLayout1".
 */
export interface BrandLayout1 {
  brands: {
    images?: (number | null) | Media;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'assosiatedBrandLayout1';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BrandLayout2".
 */
export interface BrandLayout2 {
  brands: {
    images?: (number | null) | Media;
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'assosiatedBrandLayout2';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CategoryLayout1".
 */
export interface CategoryLayout1 {
  heading: string;
  categories: {
    name: string;
    tagline: string;
    image: number | Media;
    button: {
      type?: ('custom' | 'reference') | null;
      newTab?: boolean | null;
      reference?: {
        relationTo: 'pages';
        value: number | Page;
      } | null;
      url?: string | null;
      label: string;
    };
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'categoryLayout1';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FaqLayout".
 */
export interface FaqLayout {
  heading: string;
  accordian: {
    title: string;
    content: {
      root: {
        type: string;
        children: {
          type: string;
          version: number;
          [k: string]: unknown;
        }[];
        direction: ('ltr' | 'rtl') | null;
        format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
        indent: number;
        version: number;
      };
      [k: string]: unknown;
    };
    id?: string | null;
  }[];
  id?: string | null;
  blockName?: string | null;
  blockType: 'faqLayout';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock".
 */
export interface ContentBlock {
  columns?:
    | {
        size?: ('oneThird' | 'half' | 'twoThirds' | 'full') | null;
        richText?: {
          root: {
            type: string;
            children: {
              type: string;
              version: number;
              [k: string]: unknown;
            }[];
            direction: ('ltr' | 'rtl') | null;
            format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
            indent: number;
            version: number;
          };
          [k: string]: unknown;
        } | null;
        enableLink?: boolean | null;
        link?: {
          type?: ('custom' | 'reference') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'content';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock".
 */
export interface CallToActionBlock {
  richText?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  links?:
    | {
        link: {
          type?: ('custom' | 'reference') | null;
          newTab?: boolean | null;
          reference?: {
            relationTo: 'pages';
            value: number | Page;
          } | null;
          url?: string | null;
          label: string;
          /**
           * Choose how the link should be rendered.
           */
          appearance?: ('default' | 'outline') | null;
        };
        id?: string | null;
      }[]
    | null;
  id?: string | null;
  blockName?: string | null;
  blockType: 'cta';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock".
 */
export interface BannerBlock {
  style: 'info' | 'warning' | 'error' | 'success';
  content: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'banner';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock".
 */
export interface MediaBlock {
  media: number | Media;
  id?: string | null;
  blockName?: string | null;
  blockType: 'mediaBlock';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product_categories".
 */
export interface ProductCategory {
  id: number;
  category_id: string;
  category_handle: string;
  category_title: string;
  category_media?: (number | null) | Media;
  additional_title?: string | null;
  additional_content?: {
    root: {
      type: string;
      children: {
        type: string;
        version: number;
        [k: string]: unknown;
      }[];
      direction: ('ltr' | 'rtl') | null;
      format: 'left' | 'start' | 'center' | 'right' | 'end' | 'justify' | '';
      indent: number;
      version: number;
    };
    [k: string]: unknown;
  } | null;
  additional_metadata?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  status: 'active' | 'inactive';
  visibility: 'public' | 'internal';
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs".
 */
export interface PayloadJob {
  id: number;
  /**
   * Input data provided to the job
   */
  input?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  taskStatus?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  completedAt?: string | null;
  totalTried?: number | null;
  /**
   * If hasError is true this job will not be retried
   */
  hasError?: boolean | null;
  /**
   * If hasError is true, this is the error that caused it
   */
  error?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  /**
   * Task execution log
   */
  log?:
    | {
        executedAt: string;
        completedAt: string;
        taskSlug: 'inline' | 'schedulePublish';
        taskID: string;
        input?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        output?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        state: 'failed' | 'succeeded';
        error?:
          | {
              [k: string]: unknown;
            }
          | unknown[]
          | string
          | number
          | boolean
          | null;
        id?: string | null;
      }[]
    | null;
  taskSlug?: ('inline' | 'schedulePublish') | null;
  queue?: string | null;
  waitUntil?: string | null;
  processing?: boolean | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents".
 */
export interface PayloadLockedDocument {
  id: number;
  document?:
    | ({
        relationTo: 'users';
        value: number | User;
      } | null)
    | ({
        relationTo: 'media';
        value: number | Media;
      } | null)
    | ({
        relationTo: 'pages';
        value: number | Page;
      } | null)
    | ({
        relationTo: 'products';
        value: number | Product;
      } | null)
    | ({
        relationTo: 'product_categories';
        value: number | ProductCategory;
      } | null)
    | ({
        relationTo: 'payload-jobs';
        value: number | PayloadJob;
      } | null);
  globalSlug?: string | null;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences".
 */
export interface PayloadPreference {
  id: number;
  user: {
    relationTo: 'users';
    value: number | User;
  };
  key?: string | null;
  value?:
    | {
        [k: string]: unknown;
      }
    | unknown[]
    | string
    | number
    | boolean
    | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations".
 */
export interface PayloadMigration {
  id: number;
  name?: string | null;
  batch?: number | null;
  updatedAt: string;
  createdAt: string;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "users_select".
 */
export interface UsersSelect<T extends boolean = true> {
  updatedAt?: T;
  createdAt?: T;
  email?: T;
  resetPasswordToken?: T;
  resetPasswordExpiration?: T;
  salt?: T;
  hash?: T;
  loginAttempts?: T;
  lockUntil?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "media_select".
 */
export interface MediaSelect<T extends boolean = true> {
  alt?: T;
  updatedAt?: T;
  createdAt?: T;
  url?: T;
  thumbnailURL?: T;
  filename?: T;
  mimeType?: T;
  filesize?: T;
  width?: T;
  height?: T;
  focalX?: T;
  focalY?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "pages_select".
 */
export interface PagesSelect<T extends boolean = true> {
  title?: T;
  layout?:
    | T
    | {
        homeLayout1?: T | HomeLayout1Select<T>;
        homeLayout2?: T | HomeLayout2Select<T>;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  publishedAt?: T;
  slug?: T;
  slugLock?: T;
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HomeLayout1_select".
 */
export interface HomeLayout1Select<T extends boolean = true> {
  children?:
    | T
    | {
        bannerLayout1?: T | BannerLayout1Select<T>;
        banner2?: T | BannerLayout2Select<T>;
        bannerLayout3?: T | BannerLayout3Select<T>;
        featureLayout1?: T | FeatureLayout1Select<T>;
        featureLayout2?: T | FeatureLayout2Select<T>;
        offerLayout1?: T | OfferLayout1Select<T>;
        fourcolumnLayout?: T | FourcolumnLayoutSelect<T>;
        threecolumnLayout?: T | ThreecolumnLayoutSelect<T>;
        promoProduct?: T | PromoProductLayoutSelect<T>;
        promoProduct2?: T | PromoProduct2Select<T>;
        productShowcase?: T | ProductShowcaseSelect<T>;
        showcaseLayout1?: T | ShowcaseLayout1Select<T>;
        showcaseLayout2?: T | ShowcaseSection2Select<T>;
        showcaseLayout3?: T | ShowcaseLayout3Select<T>;
        advertismentSection1?: T | AdvertismentSection1Select<T>;
        advertismentSection2?: T | AdvertismentSection2Select<T>;
        assosiatedBrandLayout1?: T | BrandLayout1Select<T>;
        assosiatedBrandLayout2?: T | BrandLayout2Select<T>;
        categoryLayout1?: T | CategoryLayout1Select<T>;
        faqLayout?: T | FaqLayoutSelect<T>;
        content?: T | ContentBlockSelect<T>;
        cta?: T | CallToActionBlockSelect<T>;
        banner?: T | BannerBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerLayout1_select".
 */
export interface BannerLayout1Select<T extends boolean = true> {
  BannerImage1?: T;
  BannerImage2?: T;
  title?: T;
  description?: T;
  button?:
    | T
    | {
        type?: T;
        newTab?: T;
        reference?: T;
        url?: T;
        label?: T;
      };
  link?:
    | T
    | {
        type?: T;
        newTab?: T;
        reference?: T;
        url?: T;
        label?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerLayout2_select".
 */
export interface BannerLayout2Select<T extends boolean = true> {
  carousel?:
    | T
    | {
        image?: T;
        label?: T;
        desc?: T;
        button?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  banner?:
    | T
    | {
        image?: T;
        label?: T;
        description?: T;
        button?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerLayout3_select".
 */
export interface BannerLayout3Select<T extends boolean = true> {
  image?:
    | T
    | {
        variant?: T;
        defaultImgUrl?: T;
        defaultImg?: T;
      };
  text?: T;
  subtext?: T;
  button?:
    | T
    | {
        label?: T;
        link?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeatureLayout1_select".
 */
export interface FeatureLayout1Select<T extends boolean = true> {
  features?:
    | T
    | {
        featureIcon?: T;
        title?: T;
        description?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FeatureLayout2_select".
 */
export interface FeatureLayout2Select<T extends boolean = true> {
  features?:
    | T
    | {
        featureIcon?: T;
        title?: T;
        description?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "OfferLayout1_select".
 */
export interface OfferLayout1Select<T extends boolean = true> {
  offers?:
    | T
    | {
        image?: T;
        title?: T;
        description?: T;
        button?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FourcolumnLayout_select".
 */
export interface FourcolumnLayoutSelect<T extends boolean = true> {
  title?: T;
  products?: T;
  button?:
    | T
    | {
        type?: T;
        newTab?: T;
        reference?: T;
        url?: T;
        label?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ThreecolumnLayout_select".
 */
export interface ThreecolumnLayoutSelect<T extends boolean = true> {
  title?: T;
  products?: T;
  button?:
    | T
    | {
        type?: T;
        newTab?: T;
        reference?: T;
        url?: T;
        label?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PromoProductLayout_select".
 */
export interface PromoProductLayoutSelect<T extends boolean = true> {
  heading?:
    | T
    | {
        name?: T;
        description?: T;
        button?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
      };
  products?: T;
  promotion?:
    | T
    | {
        promotionImage?: T;
        promoTagline?: T;
        promoHeading?: T;
        button?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "PromoProduct2_select".
 */
export interface PromoProduct2Select<T extends boolean = true> {
  heading?:
    | T
    | {
        name?: T;
        description?: T;
        button?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
      };
  products?: T;
  promotion?:
    | T
    | {
        promotionImage?: T;
        promoTagline?: T;
        promoHeading?: T;
        button?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ProductShowcase_select".
 */
export interface ProductShowcaseSelect<T extends boolean = true> {
  heading?:
    | T
    | {
        name?: T;
        button?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
      };
  products?: T;
  promotion?:
    | T
    | {
        promotionImage?: T;
        promoTagline?: T;
        promoHeading?: T;
        button?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ShowcaseLayout1_select".
 */
export interface ShowcaseLayout1Select<T extends boolean = true> {
  image?: T;
  showcaseTagline?: T;
  showcaseHeading?: T;
  showcaseDescription?: T;
  button?:
    | T
    | {
        type?: T;
        newTab?: T;
        reference?: T;
        url?: T;
        label?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ShowcaseSection2_select".
 */
export interface ShowcaseSection2Select<T extends boolean = true> {
  image?: T;
  showcaseTagline?: T;
  showcaseHeading?: T;
  showcaseDescription?: T;
  button?:
    | T
    | {
        type?: T;
        newTab?: T;
        reference?: T;
        url?: T;
        label?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ShowcaseLayout3_select".
 */
export interface ShowcaseLayout3Select<T extends boolean = true> {
  image?: T;
  showcaseTagline?: T;
  showcaseHeading?: T;
  showcaseDescription?: T;
  button?:
    | T
    | {
        type?: T;
        newTab?: T;
        reference?: T;
        url?: T;
        label?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AdvertismentSection1_select".
 */
export interface AdvertismentSection1Select<T extends boolean = true> {
  image?: T;
  adTagline?: T;
  adHeading?: T;
  adDescription?: T;
  button?:
    | T
    | {
        type?: T;
        newTab?: T;
        reference?: T;
        url?: T;
        label?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "AdvertismentSection2_select".
 */
export interface AdvertismentSection2Select<T extends boolean = true> {
  image?: T;
  adTagline?: T;
  adHeading?: T;
  adDescription?: T;
  button?:
    | T
    | {
        type?: T;
        newTab?: T;
        reference?: T;
        url?: T;
        label?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BrandLayout1_select".
 */
export interface BrandLayout1Select<T extends boolean = true> {
  brands?:
    | T
    | {
        images?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BrandLayout2_select".
 */
export interface BrandLayout2Select<T extends boolean = true> {
  brands?:
    | T
    | {
        images?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CategoryLayout1_select".
 */
export interface CategoryLayout1Select<T extends boolean = true> {
  heading?: T;
  categories?:
    | T
    | {
        name?: T;
        tagline?: T;
        image?: T;
        button?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FaqLayout_select".
 */
export interface FaqLayoutSelect<T extends boolean = true> {
  heading?: T;
  accordian?:
    | T
    | {
        title?: T;
        content?: T;
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "ContentBlock_select".
 */
export interface ContentBlockSelect<T extends boolean = true> {
  columns?:
    | T
    | {
        size?: T;
        richText?: T;
        enableLink?: T;
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "CallToActionBlock_select".
 */
export interface CallToActionBlockSelect<T extends boolean = true> {
  richText?: T;
  links?:
    | T
    | {
        link?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
              appearance?: T;
            };
        id?: T;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "BannerBlock_select".
 */
export interface BannerBlockSelect<T extends boolean = true> {
  style?: T;
  content?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "MediaBlock_select".
 */
export interface MediaBlockSelect<T extends boolean = true> {
  media?: T;
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HomeLayout2_select".
 */
export interface HomeLayout2Select<T extends boolean = true> {
  children?:
    | T
    | {
        bannerLayout1?: T | BannerLayout1Select<T>;
        banner2?: T | BannerLayout2Select<T>;
        bannerLayout3?: T | BannerLayout3Select<T>;
        featureLayout1?: T | FeatureLayout1Select<T>;
        featureLayout2?: T | FeatureLayout2Select<T>;
        offerLayout1?: T | OfferLayout1Select<T>;
        fourcolumnLayout?: T | FourcolumnLayoutSelect<T>;
        threecolumnLayout?: T | ThreecolumnLayoutSelect<T>;
        promoProduct?: T | PromoProductLayoutSelect<T>;
        promoProduct2?: T | PromoProduct2Select<T>;
        productShowcase?: T | ProductShowcaseSelect<T>;
        showcaseLayout1?: T | ShowcaseLayout1Select<T>;
        showcaseLayout2?: T | ShowcaseSection2Select<T>;
        showcaseLayout3?: T | ShowcaseLayout3Select<T>;
        advertismentSection1?: T | AdvertismentSection1Select<T>;
        advertismentSection2?: T | AdvertismentSection2Select<T>;
        assosiatedBrandLayout1?: T | BrandLayout1Select<T>;
        assosiatedBrandLayout2?: T | BrandLayout2Select<T>;
        categoryLayout1?: T | CategoryLayout1Select<T>;
        faqLayout?: T | FaqLayoutSelect<T>;
        content?: T | ContentBlockSelect<T>;
        cta?: T | CallToActionBlockSelect<T>;
        banner?: T | BannerBlockSelect<T>;
        mediaBlock?: T | MediaBlockSelect<T>;
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "products_select".
 */
export interface ProductsSelect<T extends boolean = true> {
  product_title?: T;
  product_id?: T;
  product_handle?: T;
  status?: T;
  publishedAt?: T;
  content?:
    | T
    | {
        layout?:
          | T
          | {
              homeLayout1?: T | HomeLayout1Select<T>;
              homeLayout2?: T | HomeLayout2Select<T>;
            };
      };
  details?:
    | T
    | {
        additional_title?: T;
        additional_content?: T;
        additional_metadata?: T;
      };
  meta?:
    | T
    | {
        title?: T;
        image?: T;
        description?: T;
      };
  updatedAt?: T;
  createdAt?: T;
  _status?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "product_categories_select".
 */
export interface ProductCategoriesSelect<T extends boolean = true> {
  category_id?: T;
  category_handle?: T;
  category_title?: T;
  category_media?: T;
  additional_title?: T;
  additional_content?: T;
  additional_metadata?: T;
  status?: T;
  visibility?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-jobs_select".
 */
export interface PayloadJobsSelect<T extends boolean = true> {
  input?: T;
  taskStatus?: T;
  completedAt?: T;
  totalTried?: T;
  hasError?: T;
  error?: T;
  log?:
    | T
    | {
        executedAt?: T;
        completedAt?: T;
        taskSlug?: T;
        taskID?: T;
        input?: T;
        output?: T;
        state?: T;
        error?: T;
        id?: T;
      };
  taskSlug?: T;
  queue?: T;
  waitUntil?: T;
  processing?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-locked-documents_select".
 */
export interface PayloadLockedDocumentsSelect<T extends boolean = true> {
  document?: T;
  globalSlug?: T;
  user?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-preferences_select".
 */
export interface PayloadPreferencesSelect<T extends boolean = true> {
  user?: T;
  key?: T;
  value?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "payload-migrations_select".
 */
export interface PayloadMigrationsSelect<T extends boolean = true> {
  name?: T;
  batch?: T;
  updatedAt?: T;
  createdAt?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header".
 */
export interface Header {
  id: number;
  layout?: (HeaderLayout1 | HeaderLayout2)[] | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeaderLayout1".
 */
export interface HeaderLayout1 {
  desktopLogo: number | Media;
  mobileLogo: number | Media;
  contactNumber: string;
  tree: {
    heading: string;
    parent: {
      link: {
        type?: ('custom' | 'reference') | null;
        newTab?: boolean | null;
        reference?: {
          relationTo: 'pages';
          value: number | Page;
        } | null;
        url?: string | null;
        label: string;
        /**
         * Choose how the link should be rendered.
         */
        appearance?: ('default' | 'outline') | null;
      };
      sub?:
        | {
            link: {
              type?: ('custom' | 'reference') | null;
              newTab?: boolean | null;
              reference?: {
                relationTo: 'pages';
                value: number | Page;
              } | null;
              url?: string | null;
              label: string;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: ('default' | 'outline') | null;
            };
            id?: string | null;
          }[]
        | null;
      id?: string | null;
    }[];
  };
  thumbnail: number | Media;
  menu: {
    heading: string;
    categories?: (number | ProductCategory)[] | null;
    category: {
      category_thumbnail?: (number | null) | Media;
      link: {
        type?: ('custom' | 'reference') | null;
        newTab?: boolean | null;
        reference?: {
          relationTo: 'pages';
          value: number | Page;
        } | null;
        url?: string | null;
        label: string;
        /**
         * Choose how the link should be rendered.
         */
        appearance?: ('default' | 'outline') | null;
      };
      id?: string | null;
    }[];
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'header1';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeaderLayout2".
 */
export interface HeaderLayout2 {
  desktopLogo: number | Media;
  mobileLogo: number | Media;
  contactNumber: string;
  tree: {
    heading: string;
    parent: {
      link: {
        type?: ('custom' | 'reference') | null;
        newTab?: boolean | null;
        reference?: {
          relationTo: 'pages';
          value: number | Page;
        } | null;
        url?: string | null;
        label: string;
        /**
         * Choose how the link should be rendered.
         */
        appearance?: ('default' | 'outline') | null;
      };
      sub?:
        | {
            link: {
              type?: ('custom' | 'reference') | null;
              newTab?: boolean | null;
              reference?: {
                relationTo: 'pages';
                value: number | Page;
              } | null;
              url?: string | null;
              label: string;
              /**
               * Choose how the link should be rendered.
               */
              appearance?: ('default' | 'outline') | null;
            };
            id?: string | null;
          }[]
        | null;
      id?: string | null;
    }[];
  };
  thumbnail: number | Media;
  menu: {
    heading: string;
    categories?: (number | ProductCategory)[] | null;
    category: {
      category_thumbnail?: (number | null) | Media;
      link: {
        type?: ('custom' | 'reference') | null;
        newTab?: boolean | null;
        reference?: {
          relationTo: 'pages';
          value: number | Page;
        } | null;
        url?: string | null;
        label: string;
        /**
         * Choose how the link should be rendered.
         */
        appearance?: ('default' | 'outline') | null;
      };
      id?: string | null;
    }[];
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'header2';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer".
 */
export interface Footer {
  id: number;
  layout: (FooterLayout1 | FooterLayout2)[];
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FooterLayout1".
 */
export interface FooterLayout1 {
  newsletter: {
    title: string;
    description: string;
    button: {
      type?: ('custom' | 'reference') | null;
      newTab?: boolean | null;
      reference?: {
        relationTo: 'pages';
        value: number | Page;
      } | null;
      url?: string | null;
      label: string;
    };
  };
  address: {
    logo: number | Media;
    location: string;
    phone: string;
    email: string;
  };
  footerLinks?:
    | {
        title: string;
        items: {
          link: {
            type?: ('custom' | 'reference') | null;
            newTab?: boolean | null;
            reference?: {
              relationTo: 'pages';
              value: number | Page;
            } | null;
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[];
        id?: string | null;
      }[]
    | null;
  legalLinks: {
    links: {
      link: {
        type?: ('custom' | 'reference') | null;
        newTab?: boolean | null;
        reference?: {
          relationTo: 'pages';
          value: number | Page;
        } | null;
        url?: string | null;
        label: string;
        /**
         * Choose how the link should be rendered.
         */
        appearance?: ('default' | 'outline') | null;
      };
      id?: string | null;
    }[];
    images?:
      | {
          image: number | Media;
          id?: string | null;
        }[]
      | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'footer1';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FooterLayout2".
 */
export interface FooterLayout2 {
  newsletter: {
    title: string;
    description: string;
    button: {
      type?: ('custom' | 'reference') | null;
      newTab?: boolean | null;
      reference?: {
        relationTo: 'pages';
        value: number | Page;
      } | null;
      url?: string | null;
      label: string;
    };
  };
  address: {
    logo: number | Media;
    location: string;
    phone: string;
    email: string;
  };
  footerLinks?:
    | {
        title: string;
        items: {
          link: {
            type?: ('custom' | 'reference') | null;
            newTab?: boolean | null;
            reference?: {
              relationTo: 'pages';
              value: number | Page;
            } | null;
            url?: string | null;
            label: string;
            /**
             * Choose how the link should be rendered.
             */
            appearance?: ('default' | 'outline') | null;
          };
          id?: string | null;
        }[];
        id?: string | null;
      }[]
    | null;
  legalLinks: {
    links: {
      link: {
        type?: ('custom' | 'reference') | null;
        newTab?: boolean | null;
        reference?: {
          relationTo: 'pages';
          value: number | Page;
        } | null;
        url?: string | null;
        label: string;
        /**
         * Choose how the link should be rendered.
         */
        appearance?: ('default' | 'outline') | null;
      };
      id?: string | null;
    }[];
    images?:
      | {
          image: number | Media;
          id?: string | null;
        }[]
      | null;
  };
  id?: string | null;
  blockName?: string | null;
  blockType: 'footer2';
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "theme".
 */
export interface Theme {
  id: number;
  theme?: string | null;
  updatedAt?: string | null;
  createdAt?: string | null;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "header_select".
 */
export interface HeaderSelect<T extends boolean = true> {
  layout?:
    | T
    | {
        header1?: T | HeaderLayout1Select<T>;
        header2?: T | HeaderLayout2Select<T>;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeaderLayout1_select".
 */
export interface HeaderLayout1Select<T extends boolean = true> {
  desktopLogo?: T;
  mobileLogo?: T;
  contactNumber?: T;
  tree?:
    | T
    | {
        heading?: T;
        parent?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              sub?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
      };
  thumbnail?: T;
  menu?:
    | T
    | {
        heading?: T;
        categories?: T;
        category?:
          | T
          | {
              category_thumbnail?: T;
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "HeaderLayout2_select".
 */
export interface HeaderLayout2Select<T extends boolean = true> {
  desktopLogo?: T;
  mobileLogo?: T;
  contactNumber?: T;
  tree?:
    | T
    | {
        heading?: T;
        parent?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              sub?:
                | T
                | {
                    link?:
                      | T
                      | {
                          type?: T;
                          newTab?: T;
                          reference?: T;
                          url?: T;
                          label?: T;
                          appearance?: T;
                        };
                    id?: T;
                  };
              id?: T;
            };
      };
  thumbnail?: T;
  menu?:
    | T
    | {
        heading?: T;
        categories?: T;
        category?:
          | T
          | {
              category_thumbnail?: T;
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "footer_select".
 */
export interface FooterSelect<T extends boolean = true> {
  layout?:
    | T
    | {
        footer1?: T | FooterLayout1Select<T>;
        footer2?: T | FooterLayout2Select<T>;
      };
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FooterLayout1_select".
 */
export interface FooterLayout1Select<T extends boolean = true> {
  newsletter?:
    | T
    | {
        title?: T;
        description?: T;
        button?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
      };
  address?:
    | T
    | {
        logo?: T;
        location?: T;
        phone?: T;
        email?: T;
      };
  footerLinks?:
    | T
    | {
        title?: T;
        items?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  legalLinks?:
    | T
    | {
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        images?:
          | T
          | {
              image?: T;
              id?: T;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "FooterLayout2_select".
 */
export interface FooterLayout2Select<T extends boolean = true> {
  newsletter?:
    | T
    | {
        title?: T;
        description?: T;
        button?:
          | T
          | {
              type?: T;
              newTab?: T;
              reference?: T;
              url?: T;
              label?: T;
            };
      };
  address?:
    | T
    | {
        logo?: T;
        location?: T;
        phone?: T;
        email?: T;
      };
  footerLinks?:
    | T
    | {
        title?: T;
        items?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        id?: T;
      };
  legalLinks?:
    | T
    | {
        links?:
          | T
          | {
              link?:
                | T
                | {
                    type?: T;
                    newTab?: T;
                    reference?: T;
                    url?: T;
                    label?: T;
                    appearance?: T;
                  };
              id?: T;
            };
        images?:
          | T
          | {
              image?: T;
              id?: T;
            };
      };
  id?: T;
  blockName?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "theme_select".
 */
export interface ThemeSelect<T extends boolean = true> {
  theme?: T;
  updatedAt?: T;
  createdAt?: T;
  globalType?: T;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "TaskSchedulePublish".
 */
export interface TaskSchedulePublish {
  input: {
    type?: ('publish' | 'unpublish') | null;
    locale?: string | null;
    doc?:
      | ({
          relationTo: 'pages';
          value: number | Page;
        } | null)
      | ({
          relationTo: 'products';
          value: number | Product;
        } | null);
    global?: string | null;
    user?: (number | null) | User;
  };
  output?: unknown;
}
/**
 * This interface was referenced by `Config`'s JSON-Schema
 * via the `definition` "auth".
 */
export interface Auth {
  [k: string]: unknown;
}


declare module 'payload' {
  export interface GeneratedTypes extends Config {}
}